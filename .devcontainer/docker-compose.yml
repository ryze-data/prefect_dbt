version: '3.8'
services:

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      interval: 10s
      retries: 60
      start_period: 2s
      test: pg_isready -q -d $${POSTGRES_DB} -U $${POSTGRES_USER} | grep "accepting connections" || exit 1
      timeout: 2s  
    command:
      - postgres
      - -c
      - max_connections=150
    ports:
        - 5432:5432
    # networks:
    #   - my_network  

  prefectdevcontainer:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: ${DB_CONNECTION_URL}
      PREFECT_API_DATABASE_ECHO: 'False'
      PREFECT_API_DATABASE_MIGRATE_ON_START: 'True'
      PREFECT_API_DATABASE_PASSWORD: 'None'
      # PREFECT_LOGGING_SERVER_LEVEL: WARNING
      PREFECT_API_URL: ${PREFECT_API_URL}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 4200:4200
      - 8080:8080
    volumes:
      - ../..:/workspaces:cached
      # - prefect_config:/root/.prefect
      # - prefect_development:/app/prefect_development
      # - .:/app/prefect_2_public
    # network_mode: service:db
    # networks:                                                                                      
    #   - my_network                                                                                 
    depends_on:                                                                                    
      - db
    command: /bin/sh -c "while sleep 1000; do :; done"

volumes:
  postgres-data:
    driver: local

# networks:                                                                                          
#   my_network:  